@model X.PagedList.IPagedList<GlobalDatabase.Models.Staff>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "Staff";
}

<h1>Staff</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="Staffs" asp-action="Index">
    <p>
        Staff <input type="text" name="searchTerm">
        <button type="submit" class="btn btn-primary">Search</button>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().HireDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().StaffRole)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HireDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StaffRole)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.StaffID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.StaffID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.StaffID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))