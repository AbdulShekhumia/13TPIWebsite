@model X.PagedList.IPagedList<GlobalDatabase.Models.Workspaces>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using Microsoft.AspNetCore.Identity
@using _13TPIWebsite.Areas.Identity.Data
@inject SignInManager<ApplicationUser> SignInManager
@{
    ViewData["Title"] = "Locations";
}

<h1>Locations</h1>

@if (SignInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<form asp-controller="Workspaces" asp-action="Index">
    <p>
        Name/Suburb/City <input type="text" name="searchTerm">
        <button type="submit" class="btn btn-primary">Search</button>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Workspace Name", "Index", new { sortOrder = ViewBag.WorkspacesNameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Street)
            </th>
            <th>
                @Html.ActionLink("Suburb", "Index", new { sortOrder = ViewBag.SuburbSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("City", "Index", new { sortOrder = ViewBag.CitySortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ZipCode)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkspacesName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Street)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Suburb)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZipCode)
                </td>
                @if (SignInManager.IsSignedIn(User))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.WorkspacesID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.WorkspacesID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.WorkspacesID">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
