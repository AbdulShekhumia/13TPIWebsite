// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _13TPIWebsite.Data;

namespace _13TPIWebsite.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211113051901_FirstTables")]
    partial class FirstTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GlobalDatabase.Models.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffID")
                        .HasColumnType("int");

                    b.HasKey("DepartmentID");

                    b.HasIndex("StaffID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("GlobalDatabase.Models.Job", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryRange")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobID");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("GlobalDatabase.Models.Pollution", b =>
                {
                    b.Property<int>("PollutionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AvgTemperature")
                        .HasColumnType("real");

                    b.Property<int>("CarbonEmissions")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PollutionLevels")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("PollutionID");

                    b.ToTable("Pollution");
                });

            modelBuilder.Entity("GlobalDatabase.Models.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("jobsJobID")
                        .HasColumnType("int");

                    b.HasKey("StaffID");

                    b.HasIndex("jobsJobID");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("GlobalDatabase.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GlobalDatabase.Models.Workspaces", b =>
                {
                    b.Property<int>("WorkspacesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkspacesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.Property<int?>("departmentsDepartmentID")
                        .HasColumnType("int");

                    b.HasKey("WorkspacesID");

                    b.HasIndex("departmentsDepartmentID");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("GlobalDatabase.Models.Department", b =>
                {
                    b.HasOne("GlobalDatabase.Models.Staff", "staff")
                        .WithMany("Departments")
                        .HasForeignKey("StaffID");
                });

            modelBuilder.Entity("GlobalDatabase.Models.Staff", b =>
                {
                    b.HasOne("GlobalDatabase.Models.Job", "jobs")
                        .WithMany("Staff")
                        .HasForeignKey("jobsJobID");
                });

            modelBuilder.Entity("GlobalDatabase.Models.Workspaces", b =>
                {
                    b.HasOne("GlobalDatabase.Models.Department", "departments")
                        .WithMany("workspaces")
                        .HasForeignKey("departmentsDepartmentID");
                });
#pragma warning restore 612, 618
        }
    }
}
